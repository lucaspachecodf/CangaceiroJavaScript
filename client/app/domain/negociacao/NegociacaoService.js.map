{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","get","then","dados","negociacoes","map","objeto","Date","data","quantidade","valor","err","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","obterNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log","Error"],"mappings":";;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;AACAC,gC,+BAAAA,oB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAEIC,iB,GAAN,MAAMA,iBAAN,CAAwB;;AAE3BC,8BAAc;AACV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;AAEDM,2CAA2B;;AAEvB,2BAAO,KAAKD,KAAL,CAAWE,GAAX,CAAe,oBAAf,EAAqCC,IAArC,CAA0CC,SAAS;AACtD,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;;AAGA,+BAAON,WAAP;AAEH,qBANM,EAMJO,OAAO;AACN,8BAAM,IAAIf,oBAAJ,CAAyB,uCAAzB,CAAN;AACH,qBARM,CAAP;AASH;;AAEDgB,mDAAmC;AAC/B,2BAAO,KAAKb,KAAL,CAAWE,GAAX,CAAe,sBAAf,EAAuCC,IAAvC,CAA4CC,SAAS;AACxD,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;;AAGA,+BAAON,WAAP;AACH,qBALM,EAMHO,OAAO;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,qBARE,CAAP;AAUH;;AAEDiB,oDAAoC;AAChC,2BAAO,KAAKd,KAAL,CAAWE,GAAX,CAAe,uBAAf,EAAwCC,IAAxC,CAA6CC,SAAS;AACzD,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;;AAGA,+BAAON,WAAP;AACH,qBALM,EAMHO,OAAO;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,2DAAzB,CAAN;AACH,qBARE,CAAP;AAUH;;AAEKkB,yCAAN,GAAkC;AAAA;;AAAA;AAC9B,4BAAI;AACA,gCAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKjB,wBAAL,EAD4B,EAE5B,MAAKY,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;AAKA,mCAAOE,QAAQG,MAAR,CAAe,UAACC,SAAD,EAAYC,IAAZ;AAAA,uCAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,6BAAf,EAA4D,EAA5D,EACFE,IADE,CACG,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAA7B;AAAA,6BADH,CAAP;AAEH,yBARD,CASA,OAAOd,GAAP,EAAY;AACRe,oCAAQC,GAAR,CAAYhB,GAAZ;AACA,kCAAM,IAAIiB,KAAJ,CAAU,kDAAV,CAAN;AACH;AAb6B;AAcjC;AA3D0B,a","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\r\nimport { Negociacao } from './Negociacao.js';\r\nimport { ApplicationException } from '../../util/ApplicationException.js';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n\r\n        return this._http.get('negociacoes/semana').then(dados => {\r\n            const negociacoes = dados.map(objeto =>\r\n                new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\r\n            return negociacoes;\r\n\r\n        }, err => {\r\n            throw new ApplicationException('Não foi possível obter as negociações');\r\n        })\r\n    };\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n        return this._http.get('negociacoes/anterior').then(dados => {\r\n            const negociacoes = dados.map(objeto =>\r\n                new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\r\n            return negociacoes;\r\n        },\r\n            err => {\r\n                throw new ApplicationException('Não foi possível obter as negociações da semana anterior');\r\n            }\r\n        );\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n        return this._http.get('negociacoes/retrasada').then(dados => {\r\n            const negociacoes = dados.map(objeto =>\r\n                new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\r\n            return negociacoes;\r\n        },\r\n            err => {\r\n                throw new ApplicationException('Não foi possível obter as negociações da semana retrasada');\r\n            }\r\n        );\r\n    }\r\n\r\n    async obterNegociacoesDoPeriodo() {\r\n        try {\r\n            let periodo = await Promise.all([\r\n                this.obterNegociacoesDaSemana(),\r\n                this.obterNegociacoesDaSemanaAnterior(),\r\n                this.obterNegociacoesDaSemanaRetrasada()\r\n            ])\r\n            return periodo.reduce((novoArray, item) => novoArray.concat(item), [])\r\n                .sort((a, b) => b.data.getTime() - a.data.getTime());\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n            throw new Error('Não foi possível obter as negociações do período')\r\n        }\r\n    }\r\n}\r\n"]}